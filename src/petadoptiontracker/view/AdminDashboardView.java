/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package petadoptiontracker.view;

import java.awt.Image;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import petadoptiontracker.dao.UserDao;
import petadoptiontracker.model.PetModel;
import petadoptiontracker.model.UserData;
//import javax.swing.table.DefaultTab√•leModel;
//import java.util.List;
//import petadoptiontracker.model.PetModel;

/**
 *
 * @author keshab
 */
public class AdminDashboardView extends javax.swing.JFrame {
     public AdminDashboardView(UserData user) {
        initComponents();
        
        jLabel1.setText("Welcome, " + user.getName() +" "+user.getRole()+ "!");
        
        byte[] imageData = user.getImage();
        if (imageData != null) {
            ImageIcon imageIcon = new ImageIcon(imageData);
            // Resize image to fit label size (optional)
            Image img = imageIcon.getImage().getScaledInstance(80, 80, Image.SCALE_SMOOTH);
            imageIcon = new ImageIcon(img);
            photoLabel.setIcon(imageIcon);
        }
    }
    /**
     * Creates new form DashboardView
     */
    public AdminDashboardView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        photoLabel = new javax.swing.JLabel();
        addPetTab = new javax.swing.JButton();
        dashboardButton = new javax.swing.JButton();
        viewPetTab = new javax.swing.JButton();
        signOutButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameResult = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        emailResult = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestsTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        deletePetEntryButton = new javax.swing.JButton();
        viewPetProfileButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        petStatus = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        petBreed1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        petAge1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        petPhotoUploadButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        petName2 = new javax.swing.JTextField();
        addPetButton = new javax.swing.JButton();
        petSex = new javax.swing.JComboBox<>();
        petPhotoUpload2 = new javax.swing.JButton();
        petPhotoUpload3 = new javax.swing.JButton();
        notificationButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(950, 535));
        getContentPane().setLayout(null);

        jLabel1.setText("Dashboard");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(430, 10, 170, 20);

        photoLabel.setText("jLabel2");
        photoLabel.setMaximumSize(new java.awt.Dimension(150, 150));
        photoLabel.setMinimumSize(new java.awt.Dimension(150, 150));
        getContentPane().add(photoLabel);
        photoLabel.setBounds(68, 34, 80, 80);

        addPetTab.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        addPetTab.setText("Add Pet");
        addPetTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPetTabActionPerformed(evt);
            }
        });
        getContentPane().add(addPetTab);
        addPetTab.setBounds(34, 187, 152, 31);

        dashboardButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        dashboardButton.setText("Dashboard");
        getContentPane().add(dashboardButton);
        dashboardButton.setBounds(34, 126, 152, 31);

        viewPetTab.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        viewPetTab.setText("View Pet");
        viewPetTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPetTabActionPerformed(evt);
            }
        });
        getContentPane().add(viewPetTab);
        viewPetTab.setBounds(34, 243, 150, 31);

        signOutButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        signOutButton.setText("Sign Out");
        getContentPane().add(signOutButton);
        signOutButton.setBounds(34, 303, 152, 31);

        jLabel2.setText("This is Admin Dashboard");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(400, 40, 170, 20);
        getContentPane().add(searchField);
        searchField.setBounds(320, 60, 195, 22);

        searchButton.setText("Search");
        getContentPane().add(searchButton);
        searchButton.setBounds(520, 60, 72, 23);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(371, 303, 0, 0);

        jLabel4.setText("Name");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(290, 450, 32, 16);
        getContentPane().add(nameResult);
        nameResult.setBounds(340, 450, 130, 22);

        jLabel5.setText("Email");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(490, 450, 30, 16);
        getContentPane().add(emailResult);
        emailResult.setBounds(540, 450, 189, 22);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 270, 510);

        jPanel4.setLayout(null);

        requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(requestsTable);

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(40, 10, 520, 190);

        jTabbedPane4.addTab("tab2", jPanel4);

        jPanel5.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(10, -10, 452, 402);

        deletePetEntryButton.setBackground(new java.awt.Color(204, 0, 0));
        deletePetEntryButton.setForeground(new java.awt.Color(255, 255, 255));
        deletePetEntryButton.setText("Delete Entry");
        deletePetEntryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePetEntryButtonActionPerformed(evt);
            }
        });
        jPanel5.add(deletePetEntryButton);
        deletePetEntryButton.setBounds(540, 217, 120, 23);

        viewPetProfileButton.setBackground(new java.awt.Color(204, 255, 255));
        viewPetProfileButton.setText("View Pet Profile");
        jPanel5.add(viewPetProfileButton);
        viewPetProfileButton.setBounds(540, 180, 120, 20);

        jTabbedPane4.addTab("View Pet", jPanel5);

        jPanel3.setLayout(null);

        petStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Availabe", "Not Available" }));
        petStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petStatusActionPerformed(evt);
            }
        });
        jPanel3.add(petStatus);
        petStatus.setBounds(260, 90, 120, 20);

        jLabel9.setText("Add Pet");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(130, 20, 68, 16);

        jLabel6.setText("Status");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(260, 60, 90, 20);

        jLabel7.setText("Category (cat/dog)");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(30, 70, 120, 20);

        jLabel8.setText("Breed");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(30, 110, 90, 20);
        jPanel3.add(petBreed1);
        petBreed1.setBounds(150, 110, 64, 22);

        jLabel12.setText("Age");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(30, 140, 90, 20);
        jPanel3.add(petAge1);
        petAge1.setBounds(150, 140, 64, 22);

        jLabel13.setText("Sex");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(30, 170, 90, 20);

        petPhotoUploadButton.setText("Upload");
        jPanel3.add(petPhotoUploadButton);
        petPhotoUploadButton.setBounds(150, 210, 72, 23);

        jLabel14.setText("Pet Photo");
        jPanel3.add(jLabel14);
        jLabel14.setBounds(30, 210, 90, 20);
        jPanel3.add(petName2);
        petName2.setBounds(150, 70, 64, 22);

        addPetButton.setText("Add Pet");
        jPanel3.add(addPetButton);
        addPetButton.setBounds(280, 160, 72, 23);

        petSex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        petSex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petSexActionPerformed(evt);
            }
        });
        jPanel3.add(petSex);
        petSex.setBounds(150, 170, 90, 20);

        petPhotoUpload2.setText("Upload");
        petPhotoUpload2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petPhotoUpload2ActionPerformed(evt);
            }
        });
        jPanel3.add(petPhotoUpload2);
        petPhotoUpload2.setBounds(230, 210, 75, 23);

        petPhotoUpload3.setText("Upload");
        petPhotoUpload3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petPhotoUpload3ActionPerformed(evt);
            }
        });
        jPanel3.add(petPhotoUpload3);
        petPhotoUpload3.setBounds(190, 240, 72, 23);

        jTabbedPane4.addTab("Add Pet", jPanel3);

        getContentPane().add(jTabbedPane4);
        jTabbedPane4.setBounds(320, 100, 690, 330);

        notificationButton.setBackground(new java.awt.Color(221, 179, 176));
        notificationButton.setForeground(new java.awt.Color(255, 255, 255));
        notificationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/notification.png"))); // NOI18N
        notificationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notificationButtonActionPerformed(evt);
            }
        });
        getContentPane().add(notificationButton);
        notificationButton.setBounds(820, 10, 50, 40);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void petStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_petStatusActionPerformed

    private void petSexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petSexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_petSexActionPerformed

    private void viewPetTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPetTabActionPerformed
        // TODO add your handling code here:
        jTabbedPane4.setSelectedIndex(1); // This switches the tab

    }//GEN-LAST:event_viewPetTabActionPerformed

    private void addPetTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPetTabActionPerformed
        // TODO add your handling code here:
        jTabbedPane4.setSelectedIndex(2);
    }//GEN-LAST:event_addPetTabActionPerformed

    private void petPhotoUpload2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petPhotoUpload2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_petPhotoUpload2ActionPerformed

    private void petPhotoUpload3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petPhotoUpload3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_petPhotoUpload3ActionPerformed

    private void notificationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notificationButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notificationButtonActionPerformed

    private void deletePetEntryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePetEntryButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletePetEntryButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboardView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPetButton;
    private javax.swing.JButton addPetTab;
    private javax.swing.JButton dashboardButton;
    private javax.swing.JButton deletePetEntryButton;
    private javax.swing.JTextField emailResult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameResult;
    private javax.swing.JButton notificationButton;
    private javax.swing.JTextField petAge1;
    private javax.swing.JTextField petBreed1;
    private javax.swing.JTextField petName2;
    private javax.swing.JButton petPhotoUpload2;
    private javax.swing.JButton petPhotoUpload3;
    private javax.swing.JButton petPhotoUploadButton;
    private javax.swing.JComboBox<String> petSex;
    private javax.swing.JComboBox<String> petStatus;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JTable requestsTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton signOutButton;
    private javax.swing.JButton viewPetProfileButton;
    private javax.swing.JButton viewPetTab;
    // End of variables declaration//GEN-END:variables
    
    public void addMyRequestButtonListener(ActionListener listener) {
    addPetTab.addActionListener(listener);
    }
    
    public void addSearchButtonListener(ActionListener listener) {
    searchButton.addActionListener(listener);
}
    // For controller to get input from the view
public String getSearchInput() {
    return searchField.getText();
}

// For controller to update search result
public void setSearchResult(String name, String email) {
    nameResult.setText(name);
    emailResult.setText(email);
}

// To clear previous result if user not found
public void clearSearchResult() {
    nameResult.setText("");
    emailResult.setText("");
}
public void addSignOutButtonListener(ActionListener listener){
        signOutButton.addActionListener(listener);
    } 

public void addPetButtonListener(ActionListener listener) {
    addPetButton.addActionListener(listener);
}
public void addPetPhotoUploadButtonListener(ActionListener listener) {
    petPhotoUploadButton.addActionListener(listener);
}

    /**
     * @return the petAge1
     */
    public javax.swing.JTextField getPetAge() {
        return petAge1;
    }

    /**
     * @return the petBreed1
     */
    public javax.swing.JTextField getPetBreed() {
        return petBreed1;
    }

    /**
     * @return the petName2
     */
    public javax.swing.JTextField getPetName() {
        return petName2;
    }

    /**
     * @return the petSex
     */
    public JComboBox<String> getPetSex() {
        return petSex;
    }
    public String getSelectedPetSex() {
        return (String) petSex.getSelectedItem();
    }

    /**
     * @return the petStatus
     */
    public JComboBox<String> getPetStatus() {
        return petStatus;
    }
        
    public String getSelectedPetStatus() {
        return (String) petStatus.getSelectedItem(); 
    }
    
    public void addPetTabButtonListener(ActionListener listener) {
    addPetTab.addActionListener(listener);
    }
    
    public void viewPetTabButtonListener(ActionListener listener) {
    viewPetTab.addActionListener(listener);
    }
    
    public javax.swing.JTabbedPane getTabbedPane(){
        return jTabbedPane4;
    }


    public void setPetTableData(List<PetModel> petList) {
    String[] columns = {"ID", "Name", "Breed", "Age", "Sex", "Status"};
    DefaultTableModel model = new DefaultTableModel(columns, 0);
 
    for (PetModel pet : petList) {
        Object[] row = {
            pet.getId(),
            pet.getName(),
            pet.getBreed(),
            pet.getAge(),
            pet.getSex(),
            pet.getStatus()
        };
        model.addRow(row);
    }
    jTable1.setModel(model);
}
    public void setRequestsTableData(List<Map<String, Object>> requestList) {
    // Define the columns you want to display
    String[] columns = {"User Name", "Email", "Pet Name", "Pet Breed", "Status", "Request Date"};
    DefaultTableModel model = new DefaultTableModel(columns, 0);

    for (Map<String, Object> request : requestList) {
        Object[] row = {
            request.getOrDefault("user_name", ""),
            request.getOrDefault("email", ""),
            request.getOrDefault("pet_name", ""),
            request.getOrDefault("pet_breed", ""),
            request.getOrDefault("status", ""),
            request.getOrDefault("request_date", "")
        };
        model.addRow(row);
    }
    requestsTable.setModel(model); // Replace with your actual table variable name
}

    public void addDeletePetEntryListener(ActionListener listener) {
    deletePetEntryButton.addActionListener(listener);
}
    public javax.swing.JTable getPetTable() {
    return jTable1;
}
   public void addViewPetProfileListener(ActionListener listener) {
    viewPetProfileButton.addActionListener(listener);
}
   public void petPhotoUpload2Listener(ActionListener listener) {
    petPhotoUpload2.addActionListener(listener);
}
   public void petPhotoUpload3Listener(ActionListener listener) {
    petPhotoUpload3.addActionListener(listener);
}
   public void addDashboardButtonListener(ActionListener listener) {
    dashboardButton.addActionListener(listener);
}
   public void addNotifcationButtonListener(ActionListener listener){
       notificationButton.addActionListener(listener);
   }
}